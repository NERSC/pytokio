The following are queries which are functionally equivalent to the operations
currently encapsulated in darshan_scoreboard.py::

    SELECT
      h.username,
      SUM(s.bytes_read) / 1024.0 / 1024.0 / 1024 AS readbytes,
      SUM(s.bytes_written) / 1024.0 / 1024.0 / 1024.0 AS writebytes,
      COUNT(s.bytes_written)
    FROM
      summaries AS s
    INNER JOIN
      headers AS h ON h.log_id = s.log_id
    GROUP BY h.username
    ORDER BY (readbytes+writebytes) DESC
    LIMIT 10;

    SELECT
      m.mountpt,
      SUM(s.bytes_read) / 1024.0 / 1024.0 / 1024 AS readbytes,
      SUM(s.bytes_written) / 1024.0 / 1024.0 / 1024.0 AS writebytes,
      COUNT(s.bytes_written)
    FROM
      summaries AS s
    INNER JOIN
      mounts AS m ON m.fs_id = s.fs_id
    GROUP BY m.mountpt
    ORDER BY (readbytes+writebytes) DESC
    LIMIT 10;

    SELECT
      h.exename,
      SUM(s.bytes_read) / 1024.0 / 1024.0 / 1024 AS readbytes,
      SUM(s.bytes_written) / 1024.0 / 1024.0 / 1024.0 AS writebytes,
      COUNT(s.bytes_written)
    FROM
      summaries AS s
    INNER JOIN
      headers AS h ON h.log_id = s.log_id
    GROUP BY h.exename
    ORDER BY (readbytes+writebytes) DESC
    LIMIT 10;

    SELECT
      h.username, h.exename, m.mountpt,
      SUM(s.bytes_read) / 1024.0 / 1024.0 / 1024 AS readbytes,
      SUM(s.bytes_written) / 1024.0 / 1024.0 / 1024.0 AS writebytes,
      COUNT(s.bytes_written)
    FROM
      summaries AS s
    INNER JOIN
      headers AS h ON h.log_id = s.log_id,
      mounts AS m ON m.fs_id = s.fs_id
    GROUP BY h.username, h.exename, m.mountpt
    ORDER BY (readbytes+writebytes) DESC
    LIMIT 10;
